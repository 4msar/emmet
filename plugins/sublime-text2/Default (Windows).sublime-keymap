[
	{
		"keys": ["ctrl+e"],
		"command": "run_action",
		"args": {
			"action": "expand_abbreviation"
		}
	},

	{
		"keys": ["ctrl+shift+n"],
		"command": "run_action",
		"args": {
			"action": "match_pair_outward"
		}
	},

	{
		"keys": ["ctrl+shift+t"],
		"command": "run_action",
		"args": {
			"action": "match_pair_inward"
		}
	},

	{
		"keys": ["ctrl+period"],
		"command": "run_action",
		"args": {
			"action": "next_edit_point"
		}
	},

	{
		"keys": ["ctrl+,"],
		"command": "run_action",
		"args": {
			"action": "prev_edit_point"
		}
	},

	{
		"keys": ["ctrl+j"],
		"command": "run_action",
		"args": {
			"action": "merge_lines"
		}
	},

	{
		"keys": ["ctrl+alt+/"],
		"command": "run_action",
		"args": {
			"action": "toggle_comment"
		},
		"context": [{
			"key": "selector",
			"operand": "source.css, text.xml, text.html",
			"operator": "equal"
		}]
	},

	{
		"keys": ["shift+ctrl+j"],
		"command": "run_action",
		"args": {
			"action": "split_join_tag"
		}
	},

	{
		"keys": ["ctrl+shift+u"],
		"command": "run_action",
		"args": {
			"action": "remove_tag"
		}
	},

	{
		"keys": ["ctrl+alt+shift+="],
		"command": "run_action",
		"args": {
			"action": "evaluate_math_expression"
		}
	},

	{
		"keys": ["ctrl+0"],
		"command": "run_action",
		"args": {
			"action": "increment_number_by_1"
		}
	},

	{
		"keys": ["ctrl+9"],
		"command": "run_action",
		"args": {
			"action": "decrement_number_by_1"
		}
	},

	{
		"keys": ["ctrl+alt+0"],
		"command": "run_action",
		"args": {
			"action": "increment_number_by_01"
		}
	},

	{
		"keys": ["ctrl+alt+9"],
		"command": "run_action",
		"args": {
			"action": "decrement_number_by_01"
		}
	},

	{
		"keys": ["ctrl+alt+shift+0"],
		"command": "run_action",
		"args": {
			"action": "increment_number_by_10"
		}
	},

	{
		"keys": ["ctrl+alt+shift+9"],
		"command": "run_action",
		"args": {
			"action": "decrement_number_by_10"
		}
	},

	{
		"keys": ["ctrl+shift+period"],
		"command": "run_action",
		"args": {
			"action": "select_next_item"
		}
	},

	{
		"keys": ["ctrl+shift+,"],
		"command": "run_action",
		"args": {
			"action": "select_previous_item"
		}
	},

	{
		"keys": ["ctrl+alt+shift+v"],
		"command": "run_action",
		"args": {
			"action": "reflect_css_value"
		}
	},

	{
		"keys": ["ctrl+shift+alt+6"],
		"command": "run_action",
		"args": {
			"action": "encode_decode_data_url"
		}
	},

	{
		"keys": ["ctrl+alt+shift+m"],
		"command": "run_action",
		"args": {
			"action": "update_image_size"
		}
	},

	{
		"command": "zen_as_you_type",
		"keys": ["ctrl+alt+enter"],
		"context": [
			{
				"key": "setting.is_widget", 
				"operand": false, 
				"operator": "equal"
			}
		]
	},

	{
		"command": "wrap_zen_as_you_type",
		"keys": ["ctrl+alt+w"],
		"context": [
			{
				"key": "setting.is_widget", 
				"operand": false, 
				"operator": "equal"
			}
		]
	},

	{
		"keys": ["tab"],
		"command": "expand_abbreviation_by_tab",
		"context": [
			{
				"key": "selector",
				"match_all": true,
				"operand": "source.css, source.sass, source.less, source.scss, source.stylus, text.xml, text.html, text.haml, string",
				"operator": "equal"
			}, {
				"key": "selection_empty",
				"match_all": true
			}, {
				"key": "has_next_field",
				"operator": "equal",
				"operand": false,
				"match_all": true
			}, {
				"key": "setting.disable_tab_abbreviations",
				"operator": "equal",
				"operand": false,
				"match_all": true
			}, {
				"key": "auto_complete_visible",
				"operand": false,
				"operator": "equal",
				"match_all": true
			}, {
				"key": "is_abbreviation",
				"match_all": true
			}
		]
	},

	// behaviour of tab key when autocomplete popup is visible
	{
		"keys": ["tab"],
		"command": "expand_abbreviation_by_tab",
		"context": [
			{
				"key": "selector",
				"match_all": true,
				"operand": "source.css, source.sass, source.less, source.scss, source.stylus, text.xml, text.html, text.haml, string",
				"operator": "equal"
			}, {
				"key": "selection_empty",
				"match_all": true
			}, {
				"key": "has_next_field",
				"operator": "equal",
				"operand": false,
				"match_all": true
			}, {
				"key": "auto_complete_visible",
				"operator": "equal",
				"operand": true,
				"match_all": true
			}, {
				"key": "setting.disable_tab_abbreviations_on_auto_complete",
				"operator": "equal",
				"operand": false,
				"match_all": true
			}, {
				"key": "is_abbreviation",
				"match_all": true
			}
		]
	}, 

	// insert linebreak with formatting
	{
		"keys": ["enter"],
		"command": "handle_enter_key",
		"context": [
			{
				"key": "selector",
				"operand": "text.html"
			}, {
				"key": "auto_complete_visible",
				"operand": false
			}
		]
	},

	{
		"keys": ["ctrl+shift+r"],
		"command": "rename_tag"
	}
]